################################################
# Reactive Streams: AMQP Reference Config File #
################################################

# This is the reference config file that contains all the default settings.
# Make your edits/overrides in your application.conf.

# This are sane defaults if you want to connect to the RabbitMQ broker
# that is running on localhost.
amqp {
  # An sequence of known broker addresses (hostname/port pairs)
  # to try in order. A random one will be picked during recovery.
  addresses = [
    { host = "localhost", port = 5672 }
  ],

  # Virtual host to use when connecting to the broker.
  virtual-host = "/",

  # User name to use when connecting to the broker.
  username = "guest",

  # Password to use when connecting to the broker.
  password = "guest",

  # Requested heartbeat interval.
  # - setting it to "disable" will disable heartbeat
  # - setting multiple of 1 second will enable heartbeat
  heartbeat = disable,

  # The default connection timeout.
  # - setting it to "infinite" will result in waiting without limit
  # - setting it to multiple of 1 millisecond will set the timeout
  timeout = infinite,

  # Enable automatic recovery
  automatic-recovery = false,

  # How long will automatic recovery wait before attempting to reconnect.
  recovery-interval = 5s

  # Use SSL when connecting to the broker.
  # - setting it to "disable" will disable SSL
  # - passing in the SSL protocol to use e.g. "TLSv1" or "TLSv1.2" will enable SSL
  ssl = disable
  
  # Use "default" for default executor in underlying AMQConnections (ThreadPoolExecutor with 2*CPUs)
  # and 'global' ExecutionContext for running Futures.
  # Use "thread-pool-executor" for one ExecutorService backing both underlying AMQConnection
  # and ExecutionContext used instead of `global`.
  # Use "work-stealing-pool" for ForkJoinPool with asynchronous = true.
  executor = "default"
  
  # Number of threads is 'threads-factor' * availableProcessors bounded by min and max.
  # max have to be greater than 1
  thread-pool-executor {

    threads-min = 8

    threads-factor = 3

    threads-max = 64
  }

  # Paralellism is 'paralellism-factor' * availableProcessors bounded by min and max.
  # max have to be greater than 1
  work-stealing-pool {

    parallelism-min = 8

    parallelism-factor = 3

    parallelism-max = 64
  }
}